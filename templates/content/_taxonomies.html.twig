{% import '_macro/_macro.html.twig' as macro %}

{% for taxonomy in record.definition.taxonomy %}

        {% set definition = config.get('taxonomies/' ~ taxonomy) %}
        {% if definition %}

            {% set options = taxonomy_options(definition) %}
            {% set value = taxonomy_values(record.taxonomies, definition) %}

            <div class="form-group is-normal">

                {# Print prefix #}
                {% if definition['prefix']|default() is not empty %}
                    {{ macro.generatePrefix(definition['prefix'], taxonomy) }}
                {% endif %}

                {% if definition.has_sortorder %}<div class="row"><div class="col-9">{% endif %}
                    {% include '@bolt/_partials/fields/_label.html.twig' with {
                        'id': 'taxonomy-' ~ definition.slug,
                        'label': definition.name,
                        'required': definition.required
                    } %}
                {% if definition.has_sortorder %}
                </div><div class="col-3">
                   {% include '@bolt/_partials/fields/_label.html.twig' with {
                    'id': 'taxonomy-' ~ definition.slug ~ '-sortorder',
                    'label': 'Order'|trans,
                    'required': false
                    } %}
                </div>
                </div>
                {% endif %}
                {% if definition.has_sortorder %}<div class="row"><div class="col-9">{% else %}<div>{% endif %}
                    <editor-select
                            :value="{{ value.0 }}"
                            :name="'taxonomy[{{ definition.slug }}]'"
                            :id="'taxonomy-{{ definition.slug }}'"
                            :options="{{ options }}"
                            :multiple="{{ definition.multiple ? 'true' : 'false' }}"
                            :taggable="{{ (definition.behaves_like == 'tags') ? 'true' : 'false' }}"
                            :allowempty="{{ definition.required ? 'false' : 'true' }}"
                    ></editor-select>
                {% if definition.has_sortorder %}
                    </div>
                    <div class="col-3">
                        <editor-number
                            :id="'taxonomy-{{ definition.slug }}-sortorder'"
                            :name="'taxonomy[{{ definition.slug }}-sortorder]'"
                            value="{{ value.1.first() }}"
                            :step="1"
                        ></editor-number>
                    </div>
                {% endif %}

                {# Print postfix #}
                {% if definition['postfix']|default() is not empty %}
                    {{ macro.generatePostfix(definition['postfix'], taxonomy) }}
                {% endif %}

            </div>

        {% endif %}

{% endfor %}
